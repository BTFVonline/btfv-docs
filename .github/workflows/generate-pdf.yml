name: Generate PDFs

on:
  push:
    branches:
      - main

jobs:
  generate-pdf:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    # Datum des letzten Commits erhalten
    - name: Get Last Commit Date
      run: |
        echo "LAST_UPDATED_DATE=$(git log -1 --format=%cd --date=short)" >> $GITHUB_ENV

    # Tempor√§re Markdown-Datei vorbereiten
    - name: Prepare Markdown for PDF
      run: |
        mkdir -p temp
        for file in docs/*.md; do
          filename=$(basename -- "$file")
          name="${filename%.*}" # Extract file name without extension
          
          echo copy $file to ${name}_temp.md
          cp "$file" "temp/${name}_temp.md"
          
          # Replace date placeholder in Markdown content
          sed -i "s/{{ site.time | date: \"%d-%m-%Y\" }}/$LAST_UPDATED_DATE/g" "temp/${name}_temp.md"
          
          # Replace TOC syntax for LaTeX and remove any remaining * TOC lines
          echo "Before TOC replacement:"
          cat "temp/${name}_temp.md"

          # Replace TOC syntax for LaTeX
          # sed -i '/^\* TOC$/{N;s|.*\n.*$|\\clearpage\\renewcommand{\\contentsname}{Inhaltsverzeichnis}\n\\tableofcontents\n\\clearpage|}' "temp/${name}_temp.md"
          
          # Remove any remaining * TOC lines
          # sed -i '/\* TOC/d' "temp/${name}_temp.md"

          # echo "After TOC replacement:"
          # cat "temp/${name}_temp.md"

          # Remove HTML-only blocks for PDF generation
          # sed -i '/<div class="html-only"/,/^<\/div>$/d' "temp/${name}_temp.md"
          
          #echo "After <div> replacement:"
          #cat "temp/${name}_temp.md"
        done

    # Save the temp markdown files as artifacts for inspection
    - name: Upload temp Markdown files as artifacts
      uses: actions/upload-artifact@v3
      with:
        name: temp-markdown-files
        path: temp/